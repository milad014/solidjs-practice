"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.plugin = void 0;
function plugin(p) {
    return p;
}
exports.plugin = plugin;
class Reactivity {
    trackedScope(node) {
        throw new Error("Method not implemented.");
    }
    calledFunction(node) {
        throw new Error("Method not implemented.");
    }
    trackedFunction(node) {
        throw new Error("Method not implemented.");
    }
    trackedExpression(node) {
        throw new Error("Method not implemented.");
    }
    syncCallback(node) {
        throw new Error("Method not implemented.");
    }
    provideErrorContext(node, errorMessage) {
        throw new Error("Method not implemented.");
    }
    signal(node, path) {
        throw new Error("Method not implemented.");
    }
    store(node, path) {
        throw new Error("Method not implemented.");
    }
    reactive(node, path) {
        throw new Error("Method not implemented.");
    }
    isCall(node, primitive) {
        throw new Error("Method not implemented.");
    }
}
